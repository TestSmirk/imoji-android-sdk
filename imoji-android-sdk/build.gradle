apply plugin: 'com.android.library'
apply plugin: 'maven'
apply plugin: 'signing'


android {
    compileSdkVersion 22
    buildToolsVersion "23.0.1"
    defaultPublishConfig "prodRelease"

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 22
        versionCode 19
        versionName "2.0.0"
    }
    buildTypes {

        debug{
            minifyEnabled false
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            minifyEnabled false
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors{
        local {
        }

        prod {
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/DEPENDENCIES'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:22.2.1'
    compile 'com.google.code.gson:gson:2.4'
    compile 'com.android.support:support-annotations:22.2.0'
}

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")
signing {
    required { isReleaseVersion && gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

uploadArchives {
    repositories.mavenDeployer {
        beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

        repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2") {
            authentication(userName: ossrhUsername, password: ossrhPassword)
        }

        snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots") {
            authentication(userName: ossrhUsername, password: ossrhPassword)
        }

        pom.project {
            groupId 'io.imoji.sdk'
            artifactId 'imoji-sdk'
            version android.defaultConfig.versionName
            name 'io.imoji.sdk:imoji-sdk'
            description 'Integrate millions of stickers into your Android application'
            url 'https://imoji.io/developers'
            licenses {
                license {
                    name 'MIT License'
                    url 'https://raw.githubusercontent.com/imojiengineering/imoji-android-sdk/master/LICENSE.md'
                    distribution 'repo'
                }
            }
            developers {
                developer {
                    name 'Sajjad Tabib'
                    email 'sajjad@imojiapp.com'
                    url 'https://github.com/stabib'
                    organization 'Builds, Inc'
                    organizationUrl 'https://imoji.io'
                }
                developer {
                    name 'Nima Khoshini'
                    email 'nima@imojiapp.com'
                    url 'https://github.com/nkhoshini'
                    organization 'Builds, Inc'
                    organizationUrl 'https://imoji.io'
                }
            }
            scm {
                connection 'scm:git:git@github.com:imojiengineering/imoji-android-sdk.git'
                developerConnection 'scm:git:git@github.com:imojiengineering/imoji-android-sdk.git'
                url 'git@github.com:imojiengineering/imoji-android-sdk.git'
            }
        }
    }
}
